import NacelleClient, { NacelleStaticConnector } from '@nacelle/client-js-sdk'
import { Localizer } from '@nacelle/segmentation-sdk'

export default function (context, inject) {
  const { settings, space } = <%= JSON.stringify(options) %>  // eslint-disable-line
  const { spaceID, token, endpoint, tem, wishlistEndpoint, isMultiLocale } = settings
  const defaultLocale = settings.locale || 'en-us'

  // Set up Nacelle SDK Client
  let client = new NacelleClient({
    id: spaceID,
    token: token,
    nacelleEndpoint: endpoint,
    locale: defaultLocale,
    eventsEndpoint: tem,
    wishlistEndpoint
  })

  // Register Attribution Events
  client.events.onAttributionEvent('productRecommendation', (event) => ({
    sourceHandles: event.sourceHandles,
    recommendedHandles: event.recommendedHandles,
    clickedHandle: event.clickedHandle
  }))
  client.events.onAttributionEvent('searchSelected', (event) => ({
    query: event.query,
    resultCount: event.resultCount
  }))

  // Set up Nacelle Localizer
  let navigator
  if (process.browser) {
    navigator = window.navigator
  } else {
    navigator = {}
  }

  let localizer = new Localizer({
    defaultLocale,
    navigator
  })

  // Add fallback for attempting fetching locale data
  if (isMultiLocale) {
    const fallbackConnector = new NacelleStaticConnector({
      locale: defaultLocale
    })

    const onDataError = ({ method, params, error }) => {
      if (typeof fallbackConnector[method] !== 'undefined') {
        return fallbackConnector[method]({
          ...params,
          locale: fallbackConnector.locale
        })
      }

      throw error
    }

    client.data.connector.onError = onDataError
  }

  const products = ({ handles, handle, locale = defaultLocale }) => {
    console.warn(
      `"$nacelle.products" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.data.product" or "$nacelle.data.products"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )

    let products = []

    if (Array.isArray(handles)) {
      products = handles
    } else if (handle) {
      products.push(handle)
    }

    return client.data.products({ handles: products, locale })
  }

  const content = ({ handle, type = 'page', locale = defaultLocale, blogHandle = 'blog' }) => {
    console.warn(
      `"$nacelle.content" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.data.content"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )

    return client.data.content({
      handle,
      type,
      blogHandle,
      locale
    })
  }

  const collection = ({ handle, locale = defaultLocale }) => {
    console.warn(
      `"$nacelle.collection" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.data.collection"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )

    return client.data.collection({
      handle,
      locale
    })
  }

  const shopAllProducts = () => {
    console.warn(
      `"$nacelle.shopAllProducts" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.data.allProducts"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )
    return client.data.allProducts()
  }

  const blog = ({ handle, locale = defaultLocale }) => {
    console.warn(
      `"$nacelle.blog" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.data.blog"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )

    return client.data.blog({ handle, locale })
  }

  const article = ({ articleHandle, blogHandle, locale = defaultLocale }) => {
    console.warn(
      `"$nacelle.article" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.data.article"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )

    return client.data.article({
      handle: articleHandle,
      blogHandle,
      locale
    })
  }

  const logEvent = (event) => {
    console.warn(
      `"$nacelle.logEvent" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.events.log"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )
    client.events.log(event)
  }

  const onEvent = (eventType, fn) => {
    console.warn(
      `"$nacelle.onEvent" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.events.onEvent"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )
    client.events.onEvent(eventType, fn)
  }

  const isVariantAvailable = async options => {
    console.warn(
      `"$nacelle.isVariantAvailable" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to use the @nacelle/client-js-sdk methods "$nacelle.status.isVariantAvailable"\n
Learn more about the Client SDK in our docs here: https://docs.getnacelle.com/api-reference/client-js-sdk.html`
    )
    return client.status.isVariantAvailable(options)
  }

  const setSpace = async () => {
    const { commit } = context.store

    if (process.browser) {
      console.warn(
        `"$nacelle.setSpace" is going to be deprecated in future versions of the nacelle-nuxt-module.\n
Please update your project to remove the usage of "$nacelle.setSpace".\n
This will be handled automatically during the build process.`
      )
    }

    if (space) {
      const { id, name, domain, metafields, linklists } = space
      commit('space/setId', id)
      commit('space/setName', name)
      commit('space/setDomain', domain)
      commit('space/setMetafields', metafields)
      commit('space/setLinklists', linklists)
    }
  }

  const nacelleNuxtServerInit = async () => {
    setSpace()
  }

  const plugin = {
    ...settings,
    defaultLocale: defaultLocale,
    products,
    content,
    collection,
    shopAllProducts,
    blog,
    article,
    nacelleNuxtServerInit,
    logEvent,
    onEvent,
    setSpace,
    isVariantAvailable,
    client,
    data: client.data,
    checkout: client.checkout,
    events: client.events,
    status: client.status,
    wishlist: client.wishlist,
    localizer
  }

  inject('nacelle', plugin)
}
