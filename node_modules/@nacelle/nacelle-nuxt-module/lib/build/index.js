import path from 'path'
import fs from 'fs-extra'
import handleBuildError from '../utils/handleBuildError'
import getNuxtRoutePayload from '../utils/getNuxtRoutePayload'
import generateSiteData from './data/generateSiteData'
import writeStaticFiles from './write/writeStaticFiles'

// Get sitemap data from routes.json
export const getNuxtSitemap = buildDir => {
  const staticDir = path.resolve(buildDir, './static/data')
  const routes = fs.readJsonSync(`${staticDir}/routes.json`)
  const routesOnly = routes.map(route => route.route)

  return routesOnly
}

// During Nuxt Generate this reads all the routes, finds the needed
// json data for each route, and creates a new array of routes and
// payload data that is passed to the Nuxt generator
export const getNuxtGenerateRoutes = ({ buildDir, locale }) => {
  const staticDir = path.resolve(buildDir, './static/data')
  const items = fs.readJsonSync(`${staticDir}/routes.json`)
  const routeAndPayload = items.map(item => {
    const payload = getNuxtRoutePayload({
      item,
      staticDir,
      locale
    })

    return {
      route: item.route,
      payload
    }
  })

  const homepage = getNuxtRoutePayload({
    item: {
      type: 'page',
      handle: 'homepage'
    },
    staticDir,
    locale
  })

  const shop = getNuxtRoutePayload({
    item: {
      type: 'shop',
      handle: 'shop'
    },
    staticDir,
    locale
  })

  const search = getNuxtRoutePayload({
    item: {
      type: 'page',
      handle: 'search'
    },
    staticDir,
    locale
  })

  routeAndPayload.push({
    route: '/',
    payload: homepage
  })
  routeAndPayload.push({
    route: '/shop',
    payload: shop
  })
  routeAndPayload.push({
    route: '/search',
    payload: search
  })

  return routeAndPayload
}

// During Nuxt build or Nuxt generate prefetch all site data and
// create json files for every data item.
// Site data is also used for creating a list of routes to generate
export const init = async ({
  buildDir,
  routeConfig,
  searchDataTypes,
  client,
  space
}) => {
  const staticDir = path.resolve(buildDir, './static/data')

  try {
    const siteData = await generateSiteData({
      routeConfig,
      client
    })

    return writeStaticFiles({ siteData, staticDir, searchDataTypes, space })
  } catch (error) {
    handleBuildError(
      'Error generating static data files. Aborting build',
      error
    )
  }
}

module.exports = {
  init,
  getNuxtGenerateRoutes,
  getNuxtSitemap,
  handleBuildError
}
