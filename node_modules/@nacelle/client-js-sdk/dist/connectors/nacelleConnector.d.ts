import HttpClient from '../util/http/HttpClient';
import { Product } from '../objects/product';
import { Collection } from '../objects/collection';
import { Content } from '../objects/content';
import { Space } from '../objects/space';
import { FetchProductParams, FetchProductsParams, FetchCollectionParams, FetchCollectionPageParams, FetchContentParams, FetchPageParams, FetchPagesParams, FetchBlogParams, FetchArticleParams, FetchArticlesParams, FetchBlogPageParams, UpdateParams } from './interfaces/parameters';
export interface NacelleConnectorParams {
    locale?: string;
    httpClient?: HttpClient;
}
export declare class NacelleConnector {
    apiClient: HttpClient;
    locale: string;
    constructor(params?: NacelleConnectorParams);
    updateDefaults(params?: UpdateParams): void;
    product(_options: FetchProductParams): Promise<Product>;
    products(_options: FetchProductsParams): Promise<Product[]>;
    collection(_options: FetchCollectionParams): Promise<Collection>;
    collectionPage(_options: FetchCollectionPageParams): Promise<Product[]>;
    content(_options: FetchContentParams): Promise<Content>;
    page(_options: FetchPageParams): Promise<Content>;
    pages(_options: FetchPagesParams): Promise<Content[]>;
    blog(_options: FetchBlogParams): Promise<Content>;
    article(_options: FetchArticleParams): Promise<Content>;
    articles(_options: FetchArticlesParams): Promise<Content[]>;
    blogPage(_options: FetchBlogPageParams): Promise<Content[]>;
    space(): Promise<Space>;
    allProducts(_options?: {
        limit?: number;
    }): Promise<Product[]>;
    allCollections(_options?: {
        limit?: number;
    }): Promise<Collection[]>;
    allContent(_options?: {
        limit?: number;
    }): Promise<Content[]>;
}
