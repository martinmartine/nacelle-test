{"version":3,"file":"segmentation-sdk.cjs.development.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/modules/localizer.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import axios from 'axios'\nconst isBrowser = typeof window !== 'undefined'\nconst initialPosition = {\n  coords: {\n    accuracy: 0,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    latitude: 0,\n    longitude: 0,\n    speed: null\n  },\n  timestamp: 0\n}\nconst initialLocation = {\n  lat: '',\n  lon: '',\n  address: {\n    country_code: ''\n  }\n}\nconst initialPositionOptions = {\n  enableHighAccuracy: true,\n  maximumAge: 30000,\n  timeout: 27000\n}\n\nexport class Localizer {\n  private navigator: NavigatorObject = {}\n  public position: Position = initialPosition\n  public locale: string = ''\n  public userAgent: string = ''\n  public ip: string = ''\n  public location: Location = initialLocation\n  private positionOptions: PositionOptions = initialPositionOptions\n\n  constructor(config: LocalizerConfig = {}) {\n    this.locale = config.defaultLocale || 'en-US'\n    if (isBrowser) {\n      this.navigator = config.navigator || window.navigator\n    }\n    if (config.positionOptions) {\n      this.positionOptions = config.positionOptions\n    }\n  }\n\n  async getPosition(): Promise<Position> {\n    try {\n      if (!isBrowser || !(this.navigator && this.navigator.geolocation)) {\n        throw new Error('Cannot get position outside of browser')\n      }\n\n      await this.navigator.geolocation.getCurrentPosition(\n        this.returnPositionCallback(this),\n        this.positionErrorCallback,\n        this.positionOptions\n      )\n\n      return this.position\n    } catch (error) {\n      throw new Error(\n        `Error: Navigator unable to retrieve position. \\n ${error}`\n      )\n    }\n  }\n\n  /**\n   * getLocation\n   * --\n   * Policy:\n   * https://operations.osmfoundation.org/policies/nominatim/\n   * --\n   * @param lat\n   * @param lon\n   * @return {Location}\n   */\n  async getLocation(lat: number, lon: number): Promise<Location> {\n    if (lat === undefined && lon === undefined && this.position.timestamp > 0) {\n      lat = this.position.coords.latitude\n      lon = this.position.coords.longitude\n    }\n\n    try {\n      const urlBase = `https://nominatim.openstreetmap.org/reverse`\n      const query = `?format=json&lat=${lat}&lon=${lon}`\n      const { data } = await axios.get(`${urlBase}${query}`)\n      this.location = data\n\n      return data\n    } catch (error) {\n      throw new Error(\n        `Error: Nomination unable to retrieve location. \\n ${error}`\n      )\n    }\n  }\n\n  async getIp(): Promise<IpData> {\n    try {\n      const { data } = await axios.get(\n        'https://www.cloudflare.com/cdn-cgi/trace'\n      )\n      const parsedData = this.parsePlainTextData(data)\n      this.ip = parsedData.ip\n      this.location.address.country_code = parsedData.loc.toLowerCase()\n      this.userAgent = parsedData.uag\n\n      return parsedData\n    } catch (error) {\n      throw new Error(`Error: Cloudflare unable to retrieve IP. \\n ${error}`)\n    }\n  }\n\n  getLocale(): string {\n    if (!isBrowser || !(this.navigator && this.navigator.languages)) {\n      throw new Error('Cannot get locale outside of browser')\n    }\n    this.locale = this.navigator.languages[0]\n    return this.locale\n  }\n\n  getUserAgent(): string {\n    if (!isBrowser || !(this.navigator && this.navigator.userAgent)) {\n      throw new Error('Cannot get useragent outside of browser')\n    }\n    this.userAgent = this.navigator.userAgent\n    return this.userAgent\n  }\n\n  private returnPositionCallback = (localizer: Localizer): PositionCallback => {\n    return (newPosition: Position): void => {\n      localizer.position = newPosition\n    }\n  }\n\n  private positionErrorCallback: PositionErrorCallback = (\n    error: PosistionError\n  ): void => {\n    console.log(error)\n  }\n\n  /**\n   * parsePlainTextData\n   * ---\n   * Converts plain text data to object\n   * ---\n   * @param plainText - Expects ~ 'ip=98.176.246.69\\nloc=US`\n   *\n   * Adpoted from this answer:\n   * https://stackoverflow.com/questions/17774266/read-env-file-and-convert-all-lines-into-an-object#answer-17774334\n   */\n  private parsePlainTextData(plainText: string): StringIndexer {\n    const data: StringIndexer = {}\n    plainText.replace(\n      /(\\w+)=(.+)/g,\n      (_: string, key: string, value: string) => {\n        return (data[key] = value)\n      }\n    )\n    return data\n  }\n}\n\ntype StringIndexer = { [prop: string]: string }\n\ninterface LocalizerConfig {\n  defaultLocale?: string\n  navigator?: Navigator\n  positionOptions?: PositionOptions\n}\n\ninterface PositionOptions {\n  enableHighAccuracy?: boolean\n  maximumAge?: number\n  timeout?: number\n}\n\ninterface PosistionError {\n  code: number\n  message: string\n}\n\n/* eslint-disable camelcase */\ninterface IpData {\n  fl?: string\n  h?: string\n  ip?: string\n  ts?: string\n  visit_scheme?: string\n  uag?: string\n  colo?: string\n  http?: string\n  loc?: string\n  tls?: string\n  sni?: string\n  warp?: string\n}\n\ninterface Location {\n  place_id?: number\n  licence?: string\n  osm_type?: string\n  osm_id?: number\n  lat: string\n  lon: string\n  display_name?: string\n  address: {\n    road?: string\n    neighbourhood?: string\n    hamlet?: string\n    city?: string\n    county?: string\n    state?: string\n    postcode?: string\n    country?: string\n    country_code: string\n  }\n  boundingbox?: [string, string, string, string]\n}\n/* eslint-enable */\n\ninterface NavigatorObject {\n  geolocation?: any\n  languages?: readonly string[]\n  userAgent?: string\n}\n"],"names":["isBrowser","window","initialPosition","coords","accuracy","altitude","altitudeAccuracy","heading","latitude","longitude","speed","timestamp","initialLocation","lat","lon","address","country_code","initialPositionOptions","enableHighAccuracy","maximumAge","timeout","Localizer","config","localizer","newPosition","position","error","console","log","locale","defaultLocale","navigator","positionOptions","getPosition","geolocation","Error","getCurrentPosition","returnPositionCallback","positionErrorCallback","getLocation","undefined","urlBase","query","axios","get","data","location","getIp","parsedData","parsePlainTextData","ip","loc","toLowerCase","userAgent","uag","getLocale","languages","getUserAgent","plainText","replace","_","key","value"],"mappings":"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"}