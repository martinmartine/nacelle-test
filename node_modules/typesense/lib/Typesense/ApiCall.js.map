{"version":3,"sources":["Typesense/ApiCall.js"],"names":["APIKEYHEADERNAME","ApiCall","configuration","_configuration","_defaultNode","_defaultNodeIndex","endpoint","node","nodeIndex","readReplicaNodes","protocol","host","port","path","masterNode","apiKey","defaultHeaders","_apiKey","parameters","performRequest","undefined","requestType","queryParameters","bodyParameters","additionalHeaders","validate","requestOptions","method","url","_uriFor","headers","Object","assign","_defaultHeaders","params","data","then","response","Promise","resolve","catch","error","length","responseMessage","request","message","reject","Error","module","exports"],"mappings":"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","file":"ApiCall.js","sourcesContent":["'use strict'\nimport axios from 'axios'\n\nconst APIKEYHEADERNAME = 'X-TYPESENSE-API-KEY'\n\nclass ApiCall {\n  constructor (configuration) {\n    this._configuration = configuration\n    this._defaultNode = 'master'\n    this._defaultNodeIndex = 0\n  }\n\n  _uriFor (endpoint, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    if (node === 'readReplica') {\n      return `${this._configuration.readReplicaNodes[nodeIndex].protocol}://${this._configuration.readReplicaNodes[nodeIndex].host}:${this._configuration.readReplicaNodes[nodeIndex].port}${this._configuration.readReplicaNodes[nodeIndex].path}${endpoint}`\n    } else {\n      return `${this._configuration.masterNode.protocol}://${this._configuration.masterNode.host}:${this._configuration.masterNode.port}${this._configuration.masterNode.path}${endpoint}`\n    }\n  }\n\n  _apiKey (node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    if (node === 'readReplica') {\n      return this._configuration.readReplicaNodes[nodeIndex].apiKey\n    } else {\n      return this._configuration.masterNode.apiKey\n    }\n  }\n\n  _defaultHeaders (node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    let defaultHeaders = {}\n    defaultHeaders[APIKEYHEADERNAME] = this._apiKey(node, nodeIndex)\n    defaultHeaders['Content-Type'] = 'application/json'\n    defaultHeaders['Accept'] = 'application/json'\n    return defaultHeaders\n  }\n\n  get (endpoint, parameters = {}, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    return this.performRequest('get', endpoint, parameters, undefined, undefined, node, nodeIndex)\n  }\n\n  delete (endpoint, parameters = {}, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    return this.performRequest('delete', endpoint, parameters, undefined, undefined, node, nodeIndex)\n  }\n\n  post (endpoint, parameters = {}) {\n    return this.performRequest('post', endpoint, undefined, parameters, undefined, 'master')\n  }\n\n  put (endpoint, parameters = {}) {\n    return this.performRequest('put', endpoint, undefined, parameters, undefined, 'master')\n  }\n\n  performRequest (requestType, endpoint, queryParameters = {}, bodyParameters = {}, additionalHeaders = {}, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    this\n      ._configuration\n      .validate()\n\n    const requestOptions = {\n      method: requestType,\n      url: this._uriFor(endpoint, node, nodeIndex),\n      headers: Object.assign({}, this._defaultHeaders(node, nodeIndex), additionalHeaders),\n      params: queryParameters,\n      data: bodyParameters\n    }\n\n    return axios(requestOptions).then((response) => {\n      return Promise.resolve(response.data)\n    }).catch((error) => {\n      if (requestType === 'get') {\n        if (node === 'master' && this._configuration.readReplicaNodes.length > 0) {\n          return this.performRequest(requestType, endpoint, queryParameters, bodyParameters, additionalHeaders, 'readReplica', 0)\n        } else if (node === 'readReplica') {\n          if (nodeIndex >= (this._configuration.readReplicaNodes.length - 1)) {\n            // error, but we'll let the code outside the if...else return the error\n          } else {\n            return this.performRequest(requestType, endpoint, queryParameters, bodyParameters, additionalHeaders, node, nodeIndex + 1)\n          }\n        }\n      }\n\n      let responseMessage = ''\n      if (error.response !== undefined) {\n        responseMessage = ` - ${error.response.request.path} - ${error.response.data.message}`\n      }\n      return Promise.reject(new Error(`${error.message}${responseMessage}`))\n    })\n  }\n}\n\nmodule.exports = ApiCall\n"]}