{"version":3,"sources":["Typesense/Aliases.js"],"names":["RESOURCEPATH","Aliases","configuration","_configuration","name","mapping","put","_endpointPath","schema","get","aliasName","module","exports"],"mappings":"AAAA;;;;AAEA;;;;;;;;AAEA,IAAMA,eAAe,UAArB;;IAEMC,O;AACJ,mBAAaC,aAAb,EAA4B;AAAA;;AAC1B,SAAKC,cAAL,GAAsBD,aAAtB;AACD;;;;2BAEOE,I,EAAMC,O,EAAS;AACrB,aAAO,sBAAY,KAAKF,cAAjB,EAAiCG,GAAjC,CAAqC,KAAKC,aAAL,CAAmBH,IAAnB,CAArC,EAA+DC,OAA/D,CAAP;AACD;;;6BAESG,M,EAAQ;AAChB,aAAO,sBAAY,KAAKL,cAAjB,EAAiCM,GAAjC,CAAqCT,YAArC,CAAP;AACD;;;kCAEcU,S,EAAW;AACxB,aAAUT,QAAQD,YAAlB,SAAkCU,SAAlC;AACD;;;wBAE0B;AACzB,aAAOV,YAAP;AACD;;;;;;AAGHW,OAAOC,OAAP,GAAiBX,OAAjB","file":"Aliases.js","sourcesContent":["'use strict'\n\nimport ApiCall from './ApiCall'\n\nconst RESOURCEPATH = '/aliases'\n\nclass Aliases {\n  constructor (configuration) {\n    this._configuration = configuration\n  }\n\n  upsert (name, mapping) {\n    return new ApiCall(this._configuration).put(this._endpointPath(name), mapping)\n  }\n\n  retrieve (schema) {\n    return new ApiCall(this._configuration).get(RESOURCEPATH)\n  }\n\n  _endpointPath (aliasName) {\n    return `${Aliases.RESOURCEPATH}/${aliasName}`\n  }\n\n  static get RESOURCEPATH () {\n    return RESOURCEPATH\n  }\n}\n\nmodule.exports = Aliases\n"]}