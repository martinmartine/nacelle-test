{"version":3,"sources":["webpack://VueCurrencyFilter/webpack/universalModuleDefinition","webpack://VueCurrencyFilter/webpack/bootstrap","webpack://VueCurrencyFilter/./src/utils.js","webpack://VueCurrencyFilter/./src/accounting.js","webpack://VueCurrencyFilter/./src/VueCurrencyFilter.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","nativeMap","Array","map","nativeIsArray","isArray","toString","__isNull","obj","__isString","charCodeAt","substr","__isArray","__isObject","__defaults","defs","__map","iterator","context","j","results","length","lib","checkPrecision","val","base","Math","round","abs","isNaN","settings","currency","symbol","format","decimal","thousand","precision","grouping","number","unformat","parse","utils","regex","RegExp","unformatted","parseFloat","replace","toFixed","exponentialForm","Number","rounded","formatNumber","opts","usePrecision","negative","parseInt","mod","split","formatMoney","formats","defaults","match","pos","neg","zero","checkCurrencyFormat","VueCurrencyFilter","install","Vue","options","defaultConfig","thousandsSeparator","fractionCount","fractionSeparator","symbolPosition","symbolSpacing","globalConfigs","configs","filter","_symbol","_thousandsSeparator","_fractionCount","_fractionSeparator","_symbolPosition","_symbolSpacing","runtimeConfig","result","isNegative","String","charAt","slice","amount","formatConfig","accounting","$CurrencyFilter","setConfig","getConfig"],"mappings":"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","file":"VueCurrencyFilter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VueCurrencyFilter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueCurrencyFilter\"] = factory();\n\telse\n\t\troot[\"VueCurrencyFilter\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const nativeMap = Array.prototype.map\nconst nativeIsArray = Array.isArray\nconst toString = Object.prototype.toString\n\nexport default {\n  __isNull (obj) {\n    return typeof obj === 'undefined' || obj === null\n  },\n  __isString (obj) {\n    return !!(obj === '' || (obj && obj.charCodeAt && obj.substr))\n  },\n  __isArray (obj) {\n    return nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]'\n  },\n  __isObject (obj) {\n    return obj && toString.call(obj) === '[object Object]'\n  },\n  __defaults (object, defs) {\n    var key\n    object = object || {}\n    defs = defs || {}\n    // Iterate over object non-prototype properties:\n    for (key in defs) {\n      if (defs.hasOwnProperty(key)) {\n        // Replace values with defaults only if undefined (allow empty/zero values):\n        if (object[key] == null) object[key] = defs[key]\n      }\n    }\n    return object\n  },\n  __map (obj, iterator, context) {\n    var results = []\n\n    var i; var j\n\n    if (!obj) return results\n\n    // Use native .map method if it exists:\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context)\n\n    // Fallback for native .map:\n    for (i = 0, j = obj.length; i < j; i++) {\n      results[i] = iterator.call(context, obj[i], i, obj)\n    }\n    return results\n  }\n}\n","import utils from './utils'\n\n/*\n * accounting.js v0.4.2, Copyright 2014 Open Exchange Rates, Docs: http://openexchangerates.github.io/accounting.js/\n * --0-- Moderate and maintain by Irfan Maulana <github.com/mazipan> for Vue-Currency-Filter needed --0--\n */\n// Create the local library object, to be exported or referenced globally later\nvar lib = {}\n/* --- Exposed settings --- */\n\n// The library's settings configuration object. Contains default parameters for\n// currency and number formatting\nlib.settings = {\n  currency: {\n    symbol: '$', // default currency symbol is '$'\n    format: '%s%v', // controls output: %s = symbol, %v = value (can be object, see docs)\n    decimal: '.', // decimal point separator\n    thousand: ',', // thousands separator\n    precision: 2, // decimal places\n    grouping: 3 // digit grouping (not implemented yet)\n  },\n  number: {\n    precision: 0, // default precision on numbers is 0\n    grouping: 3, // digit grouping (not implemented yet)\n    thousand: ',',\n    decimal: '.'\n  }\n}\n\n/**\n * Check and normalise the value of precision (must be positive integer)\n */\nfunction checkPrecision(val, base) {\n  val = Math.round(Math.abs(val))\n  return isNaN(val) ? base : val\n}\n\n/**\n * Parses a format string or object and returns format obj for use in rendering\n *\n * `format` is either a string with the default (positive) format, or object\n * containing `pos` (required), `neg` and `zero` values (or a function returning\n * either a string or object)\n *\n * Either string or format.pos must contain \"%v\" (value) to be valid\n */\nfunction checkCurrencyFormat(format) {\n  var defaults = lib.settings.currency.format\n\n  // Allow function as format parameter (should return string or object):\n  if (typeof format === 'function') format = format()\n\n  // Format can be a string, in which case `value` (\"%v\") must be present:\n  if (utils.__isString(format) && format.match('%v')) {\n\n    // Create and return positive, negative and zero formats:\n    return {\n      pos: format,\n      neg: format.replace('-', '').replace('%v', '-%v'),\n      zero: format\n    }\n\n    // If no format, or object is missing valid positive value, use defaults:\n  } else if (!format || !format.pos || !format.pos.match('%v')) {\n\n    // If defaults is a string, casts it to an object for faster checking next time:\n    return (!utils.__isString(defaults)) ? defaults : lib.settings.currency.format = {\n      pos: defaults,\n      neg: defaults.replace('%v', '-%v'),\n      zero: defaults\n    }\n\n  }\n  // Otherwise, assume format was fine:\n  return format\n}\n\n/* --- API Methods --- */\n\n/**\n * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n * Alias: `accounting.parse(string)`\n *\n * Decimal must be included in the regular expression to match floats (defaults to\n * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n * separator, provide it as the second argument.\n *\n * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n *\n * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n */\nvar unformat = lib.unformat = lib.parse = function (value, decimal) {\n  // Recursively unformat arrays:\n  if (utils.__isArray(value)) {\n    return utils.__map(value, function (val) {\n      return unformat(val, decimal)\n    })\n  }\n\n  // Fails silently (need decent errors):\n  value = value || 0\n\n  // Return the value as-is if it's already a number:\n  if (typeof value === 'number') return value\n\n  // Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n  decimal = decimal || lib.settings.number.decimal\n\n  // Build regex to strip out everything except digits, decimal point and minus sign:\n  var regex = new RegExp('[^0-9-' + decimal + ']', ['g']),\n    unformatted = parseFloat(\n      ('' + value)\n        .replace(/\\((?=\\d+)(.*)\\)/, '-$1') // replace bracketed values with negatives\n        .replace(regex, '') // strip out any cruft\n        .replace(decimal, '.') // make sure decimal point is standard\n    )\n\n  // This will fail silently which may cause trouble, let's wait and see:\n  return !isNaN(unformatted) ? unformatted : 0\n}\n\n/**\n * Implementation of toFixed() that treats floats more like decimals\n *\n * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n * problems for accounting- and finance-related software.\n */\nvar toFixed = lib.toFixed = function (value, precision) {\n  precision = checkPrecision(precision, lib.settings.number.precision)\n\n  var exponentialForm = Number(lib.unformat(value) + 'e' + precision)\n  var rounded = Math.round(exponentialForm)\n  var finalResult = Number(rounded + 'e-' + precision).toFixed(precision)\n  return finalResult\n}\n\n/**\n * Format a number, with comma-separated thousands and custom precision/decimal places\n * Alias: `accounting.format()`\n *\n * Localise by overriding the precision and thousand / decimal separators\n * 2nd parameter `precision` can be an object matching `settings.number`\n */\nvar formatNumber = lib.formatNumber = lib.format = function (number, precision, thousand, decimal) {\n  // Resursively format arrays:\n  if (utils.__isArray(number)) {\n    return utils.__map(number, function (val) {\n      return formatNumber(val, precision, thousand, decimal)\n    })\n  }\n\n  // Clean up number:\n  number = unformat(number)\n\n  // Build options object from second param (if object) or all params, extending defaults:\n  var opts = utils.__defaults(\n      (utils.__isObject(precision) ? precision : {\n        precision: precision,\n        thousand: thousand,\n        decimal: decimal\n      }),\n      lib.settings.number\n    ),\n    // Clean up precision\n    usePrecision = checkPrecision(opts.precision),\n\n    // Do some calc:\n    negative = number < 0 ? '-' : '',\n    base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '',\n    mod = base.length > 3 ? base.length % 3 : 0\n\n  // Format the number:\n  return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '')\n}\n\n/**\n * Format a number into currency\n *\n * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n *\n * Localise by overriding the symbol, precision, thousand / decimal separators and format\n * Second param can be an object matching `settings.currency` which is the easiest way.\n *\n * To do: tidy up the parameters\n */\nvar formatMoney = lib.formatMoney = function (number, symbol, precision, thousand, decimal, format) {\n  // Resursively format arrays:\n  if (utils.__isArray(number)) {\n    return utils.__map(number, function (val) {\n      return formatMoney(val, symbol, precision, thousand, decimal, format)\n    })\n  }\n\n  // Clean up number:\n  number = unformat(number)\n\n  // Build options object from second param (if object) or all params, extending defaults:\n  var opts = utils.__defaults(\n      (utils.__isObject(symbol) ? symbol : {\n        symbol: symbol,\n        precision: precision,\n        thousand: thousand,\n        decimal: decimal,\n        format: format\n      }),\n      lib.settings.currency\n    ),\n\n    // Check format (returns object with pos, neg and zero):\n    formats = checkCurrencyFormat(opts.format),\n\n    // Choose which format to use for this value:\n    useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero\n\n  // Return with currency symbol added:\n  return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal))\n}\n\n\n/**\n * Format a list of numbers into an accounting column, padding with whitespace\n * to line up currency symbols, thousand separators and decimals places\n *\n * List should be an array of numbers\n * Second parameter can be an object containing keys that match the params\n *\n * Returns array of accouting-formatted number strings of same length\n *\n * NB: `white-space:pre` CSS rule is required on the list container to prevent\n * browsers from collapsing the whitespace in the output strings.\n */\n\n// DECIDE TO REMOVE THIS METHODS -- UNUSED FOR NOW - by Irfan Maulana\n\n// lib.formatColumn = function (list, symbol, precision, thousand, decimal, format) {\n// \tif (!list || !utils.__isArray(list)) return [];\n\n// \t// Build options object from second param (if object) or all params, extending defaults:\n// \tvar opts = utils.__defaults(\n// \t\t\t(utils.__isObject(symbol) ? symbol : {\n// \t\t\t\tsymbol: symbol,\n// \t\t\t\tprecision: precision,\n// \t\t\t\tthousand: thousand,\n// \t\t\t\tdecimal: decimal,\n// \t\t\t\tformat: format\n// \t\t\t}),\n// \t\t\tlib.settings.currency\n// \t\t),\n\n// \t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n// \t\tformats = checkCurrencyFormat(opts.format),\n\n// \t\t// Whether to pad at start of string or after currency symbol:\n// \t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\n// \t\t// Store value for the length of the longest string in the column:\n// \t\tmaxLength = 0,\n\n// \t\t// Format the list according to options, store the length of the longest string:\n// \t\tformatted = utils.__map(list, function (val, i) {\n// \t\t\tif (utils.__isArray(val)) {\n// \t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n// \t\t\t\treturn lib.formatColumn(val, opts);\n// \t\t\t} else {\n// \t\t\t\t// Clean up the value\n// \t\t\t\tval = unformat(val);\n\n// \t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n// \t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\n// \t\t\t\t\t// Format this value, push into formatted list and save the length:\n// \t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\n// \t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n// \t\t\t\treturn fVal;\n// \t\t\t}\n// \t\t});\n\n// \t// Pad each number in the list and send back the column of numbers:\n// \treturn utils.__map(formatted, function (val, i) {\n// \t\t// Only if this is a string (not a nested array, which would have already been padded):\n// \t\tif (utils.__isString(val) && val.length < maxLength) {\n// \t\t\t// Depending on symbol position, pad after symbol or at index 0:\n// \t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol + (new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n// \t\t}\n// \t\treturn val;\n// \t});\n// };\n\nexport default lib","import accounting from './accounting'\nimport utils from './utils'\n\nconst VueCurrencyFilter = {\n  install (Vue, options) {\n    const defaultConfig = {\n      name: 'currency',\n      symbol: '',\n      thousandsSeparator: '.',\n      fractionCount: 0,\n      fractionSeparator: ',',\n      symbolPosition: 'front',\n      symbolSpacing: true\n    }\n\n    if (utils.__isNull(options)) options = {}\n    let globalConfigs = utils.__defaults(options, defaultConfig)\n    let { name, ...configs } = globalConfigs\n\n    const filterCurrency = function (value,\n      _symbol,\n      _thousandsSeparator,\n      _fractionCount,\n      _fractionSeparator,\n      _symbolPosition,\n      _symbolSpacing) {\n      let runtimeConfig = utils.__defaults({\n        symbol: _symbol,\n        thousandsSeparator: _thousandsSeparator,\n        fractionCount: _fractionCount,\n        fractionSeparator: _fractionSeparator,\n        symbolPosition: _symbolPosition,\n        symbolSpacing: _symbolSpacing\n      }, configs)\n\n      if (typeof _symbol === 'object') {\n        runtimeConfig = utils.__defaults(_symbol, configs)\n      }\n\n      let result = 0.0\n      const isNegative = String(value).charAt(0) === '-'\n\n      if (isNegative) {\n        value = String(value).slice(1)\n      }\n\n      const amount = parseFloat(value)\n      if (!isNaN(amount)) {\n        result = amount\n      }\n\n      let formatConfig = '%s%v'\n      if (runtimeConfig.symbolPosition === 'front') {\n        formatConfig = runtimeConfig.symbolSpacing ? '%s %v' : '%s%v'\n      } else {\n        formatConfig = runtimeConfig.symbolSpacing ? '%v %s' : '%v%s'\n      }\n\n      if (runtimeConfig.fractionCount > 0) {\n        value = accounting.toFixed(value, runtimeConfig.fractionCount)\n      }\n\n      result = accounting.formatMoney(value, {\n        format: formatConfig,\n        symbol: runtimeConfig.symbol,\n        precision: runtimeConfig.fractionCount,\n        thousand: runtimeConfig.thousandsSeparator,\n        decimal: runtimeConfig.fractionSeparator\n      })\n\n      if (isNegative) {\n        result = '-' + result\n      }\n\n      return result\n    }\n\n    Vue.filter(name, filterCurrency)\n    Vue.prototype.$CurrencyFilter = {\n      setConfig: (options) => {\n        configs = utils.__defaults(options, defaultConfig)\n      },\n      getConfig: () => {\n        return configs\n      }\n    }\n  }\n}\n\nexport default VueCurrencyFilter\n"],"sourceRoot":""}